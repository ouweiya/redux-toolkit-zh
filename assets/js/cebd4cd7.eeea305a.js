"use strict";(self.webpackChunkredux_toolkit_zh=self.webpackChunkredux_toolkit_zh||[]).push([[7213],{6120:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=i(4848),n=i(8453);const s={id:"other-exports",title:"Other Exports",sidebar_label:"Other Exports",hide_title:!0},o="Other Exports",c={id:"api/other-exports",title:"Other Exports",description:"&nbsp;",source:"@site/docs/api/otherExports.mdx",sourceDirName:"api",slug:"/api/other-exports",permalink:"/redux-toolkit-zh/api/other-exports",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/otherExports.mdx",tags:[],version:"current",frontMatter:{id:"other-exports",title:"Other Exports",sidebar_label:"Other Exports",hide_title:!0},sidebar:"docs",previous:{title:"Matching Utilities",permalink:"/redux-toolkit-zh/api/matching-utilities"},next:{title:"Codemods",permalink:"/redux-toolkit-zh/api/codemods"}},d={},a=[{value:"<code>nanoid</code>",id:"nanoid",level:3},{value:"<code>miniSerializeError</code>",id:"miniserializeerror",level:3},{value:"<code>copyWithStructuralSharing</code>",id:"copywithstructuralsharing",level:3},{value:"Exports from Other Libraries",id:"exports-from-other-libraries",level:2},{value:"<code>createNextState</code>",id:"createnextstate",level:3},{value:"<code>current</code>",id:"current",level:3},{value:"<code>original</code>",id:"original",level:3},{value:"<code>isDraft</code>",id:"isdraft",level:3},{value:"<code>freeze</code>",id:"freeze",level:3},{value:"<code>combineReducers</code>",id:"combinereducers",level:3},{value:"<code>compose</code>",id:"compose",level:3},{value:"<code>bindActionCreators</code>",id:"bindactioncreators",level:3},{value:"<code>createStore</code>",id:"createstore",level:3},{value:"<code>applyMiddleware</code>",id:"applymiddleware",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"\xa0"}),"\n",(0,t.jsx)(r.h1,{id:"other-exports",children:"Other Exports"}),"\n",(0,t.jsx)(r.p,{children:"Redux Toolkit exports some of its internal utilities, and re-exports additional functions from other dependencies as well."}),"\n",(0,t.jsx)(r.h3,{id:"nanoid",children:(0,t.jsx)(r.code,{children:"nanoid"})}),"\n",(0,t.jsxs)(r.p,{children:["An inlined copy of ",(0,t.jsx)(r.a,{href:"https://github.com/ai/nanoid",children:(0,t.jsx)(r.code,{children:"nanoid/nonsecure"})}),". Generates a non-cryptographically-secure random ID string. ",(0,t.jsx)(r.code,{children:"createAsyncThunk"})," uses this by default for request IDs. May also be useful for other cases as well."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { nanoid } from '@reduxjs/toolkit'\n\nconsole.log(nanoid())\n// 'dgPXxUz_6fWIQBD8XmiSy'\n"})}),"\n",(0,t.jsx)(r.h3,{id:"miniserializeerror",children:(0,t.jsx)(r.code,{children:"miniSerializeError"})}),"\n",(0,t.jsxs)(r.p,{children:["The default error serialization function used by ",(0,t.jsx)(r.code,{children:"createAsyncThunk"}),", based on ",(0,t.jsx)(r.a,{href:"https://github.com/sindresorhus/serialize-error",children:"https://github.com/sindresorhus/serialize-error"}),". If its argument is an object (such as an ",(0,t.jsx)(r.code,{children:"Error"})," instance), it returns a plain JS ",(0,t.jsx)(r.code,{children:"SerializedError"})," object that copies over any of the listed fields. Otherwise, it returns a stringified form of the value: ",(0,t.jsx)(r.code,{children:"{ message: String(value) }"}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:"no-transpile",children:"export interface SerializedError {\n  name?: string\n  message?: string\n  stack?: string\n  code?: string\n}\n\nexport function miniSerializeError(value: any): SerializedError {}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"copywithstructuralsharing",children:(0,t.jsx)(r.code,{children:"copyWithStructuralSharing"})}),"\n",(0,t.jsx)(r.p,{children:"A utility that will recursively merge two similar objects together, preserving existing references if the values appear to be the same. This is used internally to help ensure that re-fetched data keeps using the same references unless the new data has actually changed, to avoid unnecessary re-renders. Otherwise, every re-fetch would likely cause the entire dataset to be replaced and all consuming components to always re-render."}),"\n",(0,t.jsx)(r.p,{children:"If either of the inputs are not plain JS objects or arrays, the new value is returned."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:"no-transpile",children:"export function copyWithStructuralSharing<T>(oldObj: any, newObj: T): T\nexport function copyWithStructuralSharing(oldObj: any, newObj: any): any {}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"exports-from-other-libraries",children:"Exports from Other Libraries"}),"\n",(0,t.jsx)(r.h3,{id:"createnextstate",children:(0,t.jsx)(r.code,{children:"createNextState"})}),"\n",(0,t.jsxs)(r.p,{children:["The default immutable update function from the ",(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/",children:[(0,t.jsx)(r.code,{children:"immer"})," library"]}),", re-exported here as ",(0,t.jsx)(r.code,{children:"createNextState"})," (also commonly referred to as ",(0,t.jsx)(r.a,{href:"https://immerjs.github.io/immer/produce",children:(0,t.jsx)(r.code,{children:"produce"})}),")"]}),"\n",(0,t.jsx)(r.h3,{id:"current",children:(0,t.jsx)(r.code,{children:"current"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/current",children:["The ",(0,t.jsx)(r.code,{children:"current"})," function"]})," from the ",(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/",children:[(0,t.jsx)(r.code,{children:"immer"})," library"]}),", which takes a snapshot of the current state of a draft and finalizes it (but without freezing). Current is a great utility to print the current state during debugging, and the output of ",(0,t.jsx)(r.code,{children:"current"})," can also be safely leaked outside the producer."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { createReducer, createAction, current } from '@reduxjs/toolkit'\n\ninterface Todo {\n  //...\n}\nconst addTodo = createAction<Todo>('addTodo')\n\nconst initialState = [] satisfies Todo[] as Todo[]\n\nconst todosReducer = createReducer(initialState, (builder) => {\n  builder.addCase(addTodo, (state, action) => {\n    state.push(action.payload)\n    console.log(current(state))\n  })\n})\n"})}),"\n",(0,t.jsx)(r.h3,{id:"original",children:(0,t.jsx)(r.code,{children:"original"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/original",children:["The ",(0,t.jsx)(r.code,{children:"original"})," function"]})," from the ",(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/",children:[(0,t.jsx)(r.code,{children:"immer"})," library"]}),", which returns the original object. This is particularly useful for referential equality check in reducers."]}),"\n",(0,t.jsx)(r.h3,{id:"isdraft",children:(0,t.jsx)(r.code,{children:"isDraft"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/original",children:["The ",(0,t.jsx)(r.code,{children:"isDraft"})," function"]})," from the ",(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/",children:[(0,t.jsx)(r.code,{children:"immer"})," library"]}),', which checks to see if a given value is a Proxy-wrapped "draft" state.']}),"\n",(0,t.jsx)(r.h3,{id:"freeze",children:(0,t.jsx)(r.code,{children:"freeze"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/api",children:["The ",(0,t.jsx)(r.code,{children:"freeze"})," function"]})," from the ",(0,t.jsxs)(r.a,{href:"https://immerjs.github.io/immer/",children:[(0,t.jsx)(r.code,{children:"immer"})," library"]}),", which ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze",children:"freezes"})," draftable objects."]}),"\n",(0,t.jsx)(r.h3,{id:"combinereducers",children:(0,t.jsx)(r.code,{children:"combineReducers"})}),"\n",(0,t.jsxs)(r.p,{children:["Redux's ",(0,t.jsx)(r.a,{href:"https://redux.js.org/api/combinereducers",children:(0,t.jsx)(r.code,{children:"combineReducers"})}),", re-exported for convenience. While ",(0,t.jsx)(r.code,{children:"configureStore"})," calls this internally, you may wish to call it yourself to compose multiple levels of slice reducers."]}),"\n",(0,t.jsx)(r.h3,{id:"compose",children:(0,t.jsx)(r.code,{children:"compose"})}),"\n",(0,t.jsxs)(r.p,{children:["Redux's ",(0,t.jsx)(r.a,{href:"https://redux.js.org/api/compose",children:(0,t.jsx)(r.code,{children:"compose"})}),". It composes functions from right to left.\nThis is a functional programming utility. You might want to use it to apply several store custom enhancers/ functions in a row."]}),"\n",(0,t.jsx)(r.h3,{id:"bindactioncreators",children:(0,t.jsx)(r.code,{children:"bindActionCreators"})}),"\n",(0,t.jsxs)(r.p,{children:["Redux's ",(0,t.jsx)(r.a,{href:"https://redux.js.org/api/bindactioncreators",children:(0,t.jsx)(r.code,{children:"bindActionCreators"})}),". It wraps action creators with ",(0,t.jsx)(r.code,{children:"dispatch()"})," so that they dispatch immediately when called."]}),"\n",(0,t.jsx)(r.h3,{id:"createstore",children:(0,t.jsx)(r.code,{children:"createStore"})}),"\n",(0,t.jsxs)(r.p,{children:["Redux's ",(0,t.jsx)(r.a,{href:"https://redux.js.org/api/createstore",children:(0,t.jsx)(r.code,{children:"createStore"})}),". You should not need to use this directly."]}),"\n",(0,t.jsx)(r.h3,{id:"applymiddleware",children:(0,t.jsx)(r.code,{children:"applyMiddleware"})}),"\n",(0,t.jsxs)(r.p,{children:["Redux's ",(0,t.jsx)(r.a,{href:"https://redux.js.org/api/applymiddleware",children:(0,t.jsx)(r.code,{children:"applyMiddleware"})}),". You should not need to use this directly."]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>c});var t=i(6540);const n={},s=t.createContext(n);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);