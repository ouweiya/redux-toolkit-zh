"use strict";(self.webpackChunkredux_toolkit_zh=self.webpackChunkredux_toolkit_zh||[]).push([[182],{8761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var i=n(4848),r=n(8453);const s={id:"code-splitting",title:"\u4ee3\u7801\u5206\u5272",sidebar_label:"\u4ee3\u7801\u5206\u5272",hide_title:!0,description:"RTK Query > Usage > Code Splitting: dynamic injection of endpoints"},o="\u4ee3\u7801\u5206\u5272",d={id:"rtk-query/usage/code-splitting",title:"\u4ee3\u7801\u5206\u5272",description:"RTK Query > Usage > Code Splitting: dynamic injection of endpoints",source:"@site/docs/rtk-query/usage/code-splitting.mdx",sourceDirName:"rtk-query/usage",slug:"/rtk-query/usage/code-splitting",permalink:"/redux-toolkit-zh/rtk-query/usage/code-splitting",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rtk-query/usage/code-splitting.mdx",tags:[],version:"current",frontMatter:{id:"code-splitting",title:"\u4ee3\u7801\u5206\u5272",sidebar_label:"\u4ee3\u7801\u5206\u5272",hide_title:!0,description:"RTK Query > Usage > Code Splitting: dynamic injection of endpoints"},sidebar:"docs",previous:{title:"\u6d41\u5f0f\u66f4\u65b0",permalink:"/redux-toolkit-zh/rtk-query/usage/streaming-updates"},next:{title:"\u4ee3\u7801\u751f\u6210",permalink:"/redux-toolkit-zh/rtk-query/usage/code-generation"}},c={},p=[];function a(e){const t={admonition:"admonition",code:"code",em:"em",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"\xa0"}),"\n",(0,i.jsx)(t.h1,{id:"\u4ee3\u7801\u5206\u5272",children:"\u4ee3\u7801\u5206\u5272"}),"\n",(0,i.jsxs)(t.p,{children:["RTK Query \u901a\u8fc7\u5141\u8bb8\u4f60\u5728\u8bbe\u7f6e\u5b8c\u521d\u59cb\u670d\u52a1\u5b9a\u4e49\u540e\u6ce8\u5165\u989d\u5916\u7684\u7aef\u70b9\uff0c\u4f7f\u5f97\u51cf\u5c0f\u521d\u59cb\u5305\u5927\u5c0f\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u5bf9\u4e8e\u53ef\u80fd\u6709 ",(0,i.jsx)(t.em,{children:"\u8bb8\u591a"})," \u7aef\u70b9\u7684\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u975e\u5e38\u6709\u76ca\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"injectEndpoints"})," \u63a5\u53d7\u4e00\u7ec4\u7aef\u70b9\uff0c\u4ee5\u53ca\u4e00\u4e2a\u53ef\u9009\u7684 ",(0,i.jsx)(t.code,{children:"overrideExisting"})," \u53c2\u6570\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:["\u8c03\u7528 ",(0,i.jsx)(t.code,{children:"injectEndpoints"})," \u5c06\u628a\u7aef\u70b9\u6ce8\u5165\u5230\u539f\u59cb API \u4e2d\uff0c\u4f46\u4e5f\u4f1a\u8fd4\u56de\u5177\u6709\u8fd9\u4e9b\u7aef\u70b9\u6b63\u786e\u7c7b\u578b\u7684\u76f8\u540c API\u3002\uff08\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4e0d\u80fd\u4fee\u6539\u539f\u59cb\u5b9a\u4e49\u7684\u7c7b\u578b\u3002\uff09"]}),"\n",(0,i.jsx)(t.p,{children:"\u5178\u578b\u7684\u505a\u6cd5\u662f\u6709\u4e00\u4e2a\u7a7a\u7684\u4e2d\u5fc3 API \u5207\u7247\u5b9a\u4e49\uff1a"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="\u57fa\u672c\u8bbe\u7f6e"',children:"// \u6216\u8005\u4ece '@reduxjs/toolkit/query' \u5bfc\u5165\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u81ea\u52a8\u751f\u6210\u7684\u94a9\u5b50\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684 api \u670d\u52a1\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u6839\u636e\u9700\u8981\u6ce8\u5165\u7aef\u70b9\nexport const emptySplitApi = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n  endpoints: () => ({}),\n})\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u7136\u540e\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u6ce8\u5165 api \u7aef\u70b9\u5e76\u4ece\u90a3\u91cc\u5bfc\u51fa\u5b83\u4eec - \u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u786e\u4fdd\u603b\u662f\u4ee5\u4e00\u79cd\u80af\u5b9a\u5df2\u7ecf\u6ce8\u5165\u7684\u65b9\u5f0f\u5bfc\u5165\u7aef\u70b9\u3002"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="\u6ce8\u5165 & \u5bfc\u51fa\u989d\u5916\u7684\u7aef\u70b9"',children:"// \u6587\u4ef6: emptySplitApi.ts noEmit\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const emptySplitApi = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n  endpoints: () => ({}),\n})\n\n// \u6587\u4ef6: extendedApi.ts\nimport { emptySplitApi } from './emptySplitApi'\n\nconst extendedApi = emptySplitApi.injectEndpoints({\n  endpoints: (build) => ({\n    example: build.query({\n      query: () => 'test',\n    }),\n  }),\n  overrideExisting: false,\n})\n\nexport const { useExampleQuery } = extendedApi\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["\u5982\u679c\u4f60\u6ce8\u5165\u4e86\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7aef\u70b9\uff0c\u5e76\u4e14\u6ca1\u6709\u660e\u786e\u6307\u5b9a ",(0,i.jsx)(t.code,{children:"overrideExisting: true"}),"\uff0c\u90a3\u4e48\u8be5\u7aef\u70b9\u5c06\u4e0d\u4f1a\u88ab\u8986\u76d6\u3002\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5982\u679c ",(0,i.jsx)(t.code,{children:"overrideExisting"})," \u8bbe\u7f6e\u4e3a ",(0,i.jsx)(t.code,{children:"false"}),"\uff0c\u4f60\u4f1a\u6536\u5230\u5173\u4e8e\u6b64\u7684\u8b66\u544a\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a ",(0,i.jsx)(t.code,{children:"'throw'"}),"\uff0c\u5c06\u4f1a\u629b\u51fa\u9519\u8bef\u3002"]})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);