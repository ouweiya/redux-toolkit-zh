"use strict";(self.webpackChunkredux_toolkit_zh=self.webpackChunkredux_toolkit_zh||[]).push([[9519],{9209:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(4848),s=t(8453);const r={id:"matching-utilities",title:"Matching Utilities",sidebar_label:"Matching Utilities",hide_title:!0},c="Matching Utilities",a={id:"api/matching-utilities",title:"Matching Utilities",description:"&nbsp;",source:"@site/docs/api/matching-utilities.mdx",sourceDirName:"api",slug:"/api/matching-utilities",permalink:"/api/matching-utilities",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/matching-utilities.mdx",tags:[],version:"current",frontMatter:{id:"matching-utilities",title:"Matching Utilities",sidebar_label:"Matching Utilities",hide_title:!0},sidebar:"docs",previous:{title:"createSelector",permalink:"/api/createSelector"},next:{title:"Other Exports",permalink:"/api/other-exports"}},o={},l=[{value:"General Purpose",id:"general-purpose",level:3},{value:"<code>createAsyncThunk</code>-specific matchers",id:"createasyncthunk-specific-matchers",level:3},{value:"<code>isAllOf</code>",id:"isallof",level:2},{value:"<code>isAnyOf</code>",id:"isanyof",level:2},{value:"<code>isAsyncThunkAction</code>",id:"isasyncthunkaction",level:2},{value:"<code>isPending</code>",id:"ispending",level:2},{value:"<code>isFulfilled</code>",id:"isfulfilled",level:2},{value:"<code>isRejected</code>",id:"isrejected",level:2},{value:"<code>isRejectedWithValue</code>",id:"isrejectedwithvalue",level:2},{value:"Using matchers to reduce code complexity, duplication and boilerplate",id:"using-matchers-to-reduce-code-complexity-duplication-and-boilerplate",level:2},{value:"Using matchers as a TypeScript Type Guard",id:"using-matchers-as-a-typescript-type-guard",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.h1,{id:"matching-utilities",children:"Matching Utilities"}),"\n",(0,i.jsxs)(n.p,{children:["Redux Toolkit exports several type-safe action matching utilities that you can leverage when checking for specific kinds of actions. These are primarily useful for the ",(0,i.jsx)(n.code,{children:"builder.addMatcher()"})," cases in ",(0,i.jsx)(n.code,{children:"createSlice"})," and ",(0,i.jsx)(n.code,{children:"createReducer"}),", as well as when writing custom middleware."]}),"\n",(0,i.jsx)(n.h3,{id:"general-purpose",children:"General Purpose"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isallof",children:(0,i.jsx)(n.code,{children:"isAllOf"})})," - returns true when ",(0,i.jsx)(n.strong,{children:"all"})," conditions are met"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isanyof",children:(0,i.jsx)(n.code,{children:"isAnyOf"})})," - returns true when ",(0,i.jsx)(n.strong,{children:"at least one of"})," the conditions are met"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"createasyncthunk-specific-matchers",children:[(0,i.jsx)(n.code,{children:"createAsyncThunk"}),"-specific matchers"]}),"\n",(0,i.jsx)(n.p,{children:"All these matchers can either be called with one or more thunks as arguments, in which case they will return a matcher function for that condition and thunks, or with one actions, in which case they will match for any thunk action with said condition."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isasyncthunkaction",children:(0,i.jsx)(n.code,{children:"isAsyncThunkAction"})})," - accepts one or more action creators and returns true when all match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#ispending",children:(0,i.jsx)(n.code,{children:"isPending"})})," - accepts one or more action creators and returns true when all match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isfulfilled",children:(0,i.jsx)(n.code,{children:"isFulfilled"})})," - accepts one or more action creators and returns true when all match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isrejected",children:(0,i.jsx)(n.code,{children:"isRejected"})})," - accepts one or more action creators and returns true when all match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#isrejectedwithvalue",children:(0,i.jsx)(n.code,{children:"isRejectedWithValue"})})," - accepts one or more action creators and returns true when all match"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"isallof",children:(0,i.jsx)(n.code,{children:"isAllOf"})}),"\n",(0,i.jsx)(n.p,{children:"A higher-order function that accepts one or more of:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"redux-toolkit"})," action creator functions such as the ones produced by:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/createAction",children:(0,i.jsx)(n.code,{children:"createAction"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/createSlice#return-value",children:(0,i.jsx)(n.code,{children:"createSlice"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/createAsyncThunk#promise-lifecycle-actions",children:(0,i.jsx)(n.code,{children:"createAsyncThunk"})})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"type guard functions"}),"\n",(0,i.jsxs)(n.li,{children:["custom action creator functions that have a ",(0,i.jsx)(n.code,{children:".match"})," property that is a type guard"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It will return a type guard function that returns ",(0,i.jsx)(n.code,{children:"true"})," if ",(0,i.jsx)(n.em,{children:"all"})," of the provided functions match."]}),"\n",(0,i.jsx)(n.h2,{id:"isanyof",children:(0,i.jsx)(n.code,{children:"isAnyOf"})}),"\n",(0,i.jsxs)(n.p,{children:["Accepts the same inputs as ",(0,i.jsx)(n.code,{children:"isAllOf"})," and will return a type guard function that returns ",(0,i.jsx)(n.code,{children:"true"})," if at least one of the provided functions match."]}),"\n",(0,i.jsx)(n.h2,{id:"isasyncthunkaction",children:(0,i.jsx)(n.code,{children:"isAsyncThunkAction"})}),"\n",(0,i.jsxs)(n.p,{children:["A higher-order function that returns a type guard function that may be used to check whether an action was created by ",(0,i.jsx)(n.a,{href:"/api/createAsyncThunk",children:(0,i.jsx)(n.code,{children:"createAsyncThunk"})}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="isAsyncThunkAction usage"',children:"import { isAsyncThunkAction } from '@reduxjs/toolkit'\nimport type { UnknownAction } from '@reduxjs/toolkit'\nimport { requestThunk1, requestThunk2 } from '@virtual/matchers'\n\nconst isARequestAction = isAsyncThunkAction(requestThunk1, requestThunk2)\n\nfunction handleRequestAction(action: UnknownAction) {\n  if (isARequestAction(action)) {\n    // action is an action dispatched by either `requestThunk1` or `requestThunk2`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ispending",children:(0,i.jsx)(n.code,{children:"isPending"})}),"\n",(0,i.jsxs)(n.p,{children:["A higher-order function that returns a type guard function that may be used to check whether an action is a 'pending' action creator from the ",(0,i.jsx)(n.code,{children:"createAsyncThunk"})," promise lifecycle."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="isPending usage"',children:"import { isPending } from '@reduxjs/toolkit'\nimport type { UnknownAction } from '@reduxjs/toolkit'\nimport { requestThunk1, requestThunk2 } from '@virtual/matchers'\n\nconst isAPendingAction = isPending(requestThunk1, requestThunk2)\n\nfunction handlePendingAction(action: UnknownAction) {\n  if (isAPendingAction(action)) {\n    // action is a pending action dispatched by either `requestThunk1` or `requestThunk2`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isfulfilled",children:(0,i.jsx)(n.code,{children:"isFulfilled"})}),"\n",(0,i.jsxs)(n.p,{children:["A higher-order function that returns a type guard function that may be used to check whether an action is a 'fulfilled'' action creator from the ",(0,i.jsx)(n.code,{children:"createAsyncThunk"})," promise lifecycle."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="isFulfilled usage"',children:"import { isFulfilled } from '@reduxjs/toolkit'\nimport type { UnknownAction } from '@reduxjs/toolkit'\nimport { requestThunk1, requestThunk2 } from '@virtual/matchers'\n\nconst isAFulfilledAction = isFulfilled(requestThunk1, requestThunk2)\n\nfunction handleFulfilledAction(action: UnknownAction) {\n  if (isAFulfilledAction(action)) {\n    // action is a fulfilled action dispatched by either `requestThunk1` or `requestThunk2`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isrejected",children:(0,i.jsx)(n.code,{children:"isRejected"})}),"\n",(0,i.jsxs)(n.p,{children:["A higher-order function that returns a type guard function that may be used to check whether an action is a 'rejected' action creator from the ",(0,i.jsx)(n.code,{children:"createAsyncThunk"})," promise lifecycle."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="isRejected usage"',children:"import { isRejected } from '@reduxjs/toolkit'\nimport type { UnknownAction } from '@reduxjs/toolkit'\nimport { requestThunk1, requestThunk2 } from '@virtual/matchers'\n\nconst isARejectedAction = isRejected(requestThunk1, requestThunk2)\n\nfunction handleRejectedAction(action: UnknownAction) {\n  if (isARejectedAction(action)) {\n    // action is a rejected action dispatched by either `requestThunk1` or `requestThunk2`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isrejectedwithvalue",children:(0,i.jsx)(n.code,{children:"isRejectedWithValue"})}),"\n",(0,i.jsxs)(n.p,{children:["A higher-order function that returns a type guard function that may be used to check whether an action is a 'rejected' action creator from the ",(0,i.jsx)(n.code,{children:"createAsyncThunk"})," promise lifecycle that was created by ",(0,i.jsx)(n.a,{href:"/api/createAsyncThunk#handling-thunk-errors",children:(0,i.jsx)(n.code,{children:"rejectWithValue"})}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="isRejectedWithValue usage"',children:"import { isRejectedWithValue } from '@reduxjs/toolkit'\nimport type { UnknownAction } from '@reduxjs/toolkit'\nimport { requestThunk1, requestThunk2 } from '@virtual/matchers'\n\nconst isARejectedWithValueAction = isRejectedWithValue(\n  requestThunk1,\n  requestThunk2,\n)\n\nfunction handleRejectedWithValueAction(action: UnknownAction) {\n  if (isARejectedWithValueAction(action)) {\n    // action is a rejected action dispatched by either `requestThunk1` or `requestThunk2`\n    // where rejectWithValue was used\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-matchers-to-reduce-code-complexity-duplication-and-boilerplate",children:"Using matchers to reduce code complexity, duplication and boilerplate"}),"\n",(0,i.jsxs)(n.p,{children:["When using the ",(0,i.jsx)(n.code,{children:"builder"})," pattern to construct a reducer, we add cases or matchers one at a time. However, by using ",(0,i.jsx)(n.code,{children:"isAnyOf"})," or ",(0,i.jsx)(n.code,{children:"isAllOf"}),",\nwe're able to easily use the same matcher for several cases in a type-safe manner."]}),"\n",(0,i.jsx)(n.p,{children:"First, let's examine an unnecessarily complex example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="Example without using a matcher utility"',children:"import { createAsyncThunk, createReducer } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\n\ninterface Data {\n  isInteresting: boolean\n  isSpecial: boolean\n}\n\ninterface Special extends Data {\n  isSpecial: true\n}\n\ninterface Interesting extends Data {\n  isInteresting: true\n}\n\nfunction isSpecial(\n  action: PayloadAction<Data>,\n): action is PayloadAction<Special> {\n  return action.payload.isSpecial\n}\n\nfunction isInteresting(\n  action: PayloadAction<Data>,\n): action is PayloadAction<Interesting> {\n  return action.payload.isInteresting\n}\n\ninterface ExampleState {\n  isSpecial: boolean\n  isInteresting: boolean\n}\n\nconst initialState = {\n  isSpecial: false,\n  isInteresting: false,\n} satisfies ExampleState as ExampleState\n\nexport const isSpecialAndInterestingThunk = createAsyncThunk(\n  'isSpecialAndInterestingThunk',\n  () => {\n    return {\n      isSpecial: true,\n      isInteresting: true,\n    }\n  },\n)\n\n// This has unnecessary complexity\nconst loadingReducer = createReducer(initialState, (builder) => {\n  builder.addCase(isSpecialAndInterestingThunk.fulfilled, (state, action) => {\n    if (isSpecial(action)) {\n      state.isSpecial = true\n    }\n    if (isInteresting(action)) {\n      state.isInteresting = true\n    }\n  })\n})\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this scenario, we can use ",(0,i.jsx)(n.code,{children:"isAllOf"})," to simplify our code and reduce some of the boilerplate."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="Refactoring with isAllOf"',children:"import { createReducer, isAllOf } from '@reduxjs/toolkit'\nimport {\n  isSpecialAndInterestingThunk,\n  initialState,\n  isSpecial,\n  isInteresting,\n} from '@virtual/matchers' // This is a fake pkg that provides the types shown above\nimport type { Data } from '@virtual/matchers' // This is a fake pkg that provides the types shown above\n\nconst loadingReducer = createReducer(initialState, (builder) => {\n  builder\n    .addMatcher(\n      isAllOf(isSpecialAndInterestingThunk.fulfilled, isSpecial),\n      (state, action) => {\n        state.isSpecial = true\n      },\n    )\n    .addMatcher(\n      isAllOf(isSpecialAndInterestingThunk.fulfilled, isInteresting),\n      (state, action) => {\n        state.isInteresting = true\n      },\n    )\n})\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-matchers-as-a-typescript-type-guard",children:"Using matchers as a TypeScript Type Guard"}),"\n",(0,i.jsxs)(n.p,{children:["The function returned by ",(0,i.jsx)(n.code,{children:"isAllOf"})," and ",(0,i.jsx)(n.code,{children:"isAnyOf"})," can also be used as a TypeScript type guard in other contexts."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="Using isAllOf as a type guard"',children:"import { isAllOf } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport { isSpecial, isInteresting } from '@virtual/matchers' // This is a fake pkg that provides the types shown above\nimport type { Data } from '@virtual/matchers' // This is a fake pkg that provides the types shown above\n\nconst isSpecialAndInteresting = isAllOf(isSpecial, isInteresting)\n\nfunction someFunction(action: PayloadAction<Data>) {\n  if (isSpecialAndInteresting(action)) {\n    // \"action\" will be correctly typed as:\n    // `PayloadAction<Special> & PayloadAction<Interesting>`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="Using isAnyOf as a type guard"',children:"import { isAnyOf } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport { Data, isSpecial, isInteresting } from '@virtual/matchers' // this is a fake pkg that provides the types shown above\n\nconst isSpecialOrInteresting = isAnyOf(isSpecial, isInteresting)\n\nfunction someFunction(action: PayloadAction<Data>) {\n  if (isSpecialOrInteresting(action)) {\n    // \"action\" will be correctly typed as:\n    // `PayloadAction<Special> | PayloadAction<Interesting>`\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)("iframe",{src:"https://codesandbox.io/embed/redux-toolkit-matchers-example-e765q?fontsize=14&hidenavigation=1&module=%2Fsrc%2Ffeatures%2Fcounter%2FcounterSlice.ts&theme=dark&runonclick=1",style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},title:"redux-toolkit-matchers-example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);